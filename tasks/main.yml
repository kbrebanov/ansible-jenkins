---
# tasks file for jenkins

- name: Include distribution specific variables
  include_vars: "{{ ansible_distribution }}.yml"
  tags: jenkins

- include: CentOS.yml
  when: ansible_distribution == "CentOS"
  tags: jenkins

- include: Ubuntu.yml
  when: ansible_distribution == "Ubuntu"
  tags: jenkins

- name: Ensure Jenkins is started and enabled on boot
  service: name={{ jenkins_service_name }} state=started enabled=yes
  tags: jenkins

- name: Create Jenkins defaults file
  template: >
    src=jenkins.defaults.j2
    dest=/etc/default/jenkins
    owner=root
    group=root
    mode=0644
  notify: restart jenkins
  tags: jenkins

- name: Ensure Jenkins is ready
  wait_for: >
    path=/var/log/jenkins/jenkins.log
    search_regex="Jenkins is fully up and running"
  tags: jenkins

- name: Install Jenkins CLI
  get_url: >
    url=http://localhost:8080/jnlpJars/jenkins-cli.jar
    dest={{ jenkins_home }}/jenkins-cli.jar
    owner={{ jenkins_user }}
    group={{ jenkins_group }}
    mode=0644
  tags: jenkins

- name: Install Jenkins plugins
  get_url: >
    url=https://updates.jenkins-ci.org/stable-{{ jenkins_version|truncate(5, True, '') }}/latest/{{ item }}.hpi
    dest={{ jenkins_home }}/plugins/{{ item }}.jpi
    owner={{ jenkins_user }}
    group={{ jenkins_group }}
    mode=0644
  with_items: jenkins_plugins
  notify: restart jenkins
  tags: jenkins

- name: Create Jenkins main configuration
  template: >
    src=config.xml.j2
    dest={{ jenkins_home }}/config.xml
    owner={{ jenkins_user }}
    group={{ jenkins_group }}
    mode=0644
  notify: restart jenkins
  tags: jenkins

- name: Create Jenkins location configuration
  template: >
    src=jenkins.model.JenkinsLocationConfiguration.xml.j2
    dest={{ jenkins_home }}/jenkins.model.JenkinsLocationConfiguration.xml
    owner={{ jenkins_user }}
    group={{ jenkins_group }}
    mode=0644
  notify: restart jenkins
  tags: jenkins
